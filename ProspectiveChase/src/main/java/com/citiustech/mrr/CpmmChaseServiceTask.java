package com.citiustech.mrr;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class CpmmChaseServiceTask implements java.io.Serializable, org.kie.api.runtime.process.WorkItemHandler {

    static final long serialVersionUID = 1L;
    
    private static final String sql = "UPDATE CPMM_CHSE_LST SET CPMM_CHSE_STS_MSTR_CD = ? , ASSGD_TO_LGN_ID = ? , OWNER = ? , CPMM_CHSE_DUE_DT = ? , ASSGD_DT = ? WHERE CPMM_ID = ?";

    public CpmmChaseServiceTask() {
    }

    @Override
    public void executeWorkItem(org.kie.api.runtime.process.WorkItem workItem, org.kie.api.runtime.process.WorkItemManager manager) {
        // extract parameters
        java.util.Map<String, Object> results = new java.util.HashMap<String, Object>();
        com.citiustech.mrr.CPMM1 cpmmChase = (com.citiustech.mrr.CPMM1) workItem.getParameter("cpmm");
        System.out.println("[Inside:CpmmChaseServiceTask:Expression] [message:CPMM Chase Status Master Code is] " + cpmmChase.getCpmmChseStsCd());
        System.out.println("[Inside:CpmmChaseServiceTask:Expression] [message:New owner name is] " + cpmmChase.getAssgdToUser());
        System.out.println("[Inside:CpmmChaseServiceTask:Expression] [message:CPMM ID is] " + cpmmChase.getCpmmId());
        if(cpmmChase.getCpmmId()==null){
            results.put("cpmm", cpmmChase);
            manager.completeWorkItem(workItem.getId(), results);
            return;
        }
        try (java.sql.Connection conn = com.citiustech.mrr.MRRConnectionUtil.getConnection();java.sql.PreparedStatement stmt = conn.prepareStatement(sql);) {
            stmt.setString(1, cpmmChase.getCpmmChseStsCd());
            stmt.setString(2, cpmmChase.getAssgdToUser());
            stmt.setString(3, cpmmChase.getOwner());
            stmt.setTimestamp(4, new java.sql.Timestamp(cpmmChase.getChseDueDt().getTime()));
            stmt.setTimestamp(5, new java.sql.Timestamp(cpmmChase.getAssignedDate().getTime()));
            stmt.setInt(6, cpmmChase.getCpmmId().intValue());
            stmt.executeUpdate();
            results.put("cpmm", cpmmChase);
            manager.completeWorkItem(workItem.getId(), results);
        } catch(java.sql.SQLException ex){
            System.out.println("SQL query execution failed: " + ex);
        }
    }

    @Override
    public void abortWorkItem(org.kie.api.runtime.process.WorkItem workItem, org.kie.api.runtime.process.WorkItemManager manager) {
        // Do nothing, notifications cannot be aborted
        System.out.println("--> CpmmChaseServiceTask.abortWorkItem()...");
        manager.abortWorkItem(workItem.getId());
    }


}